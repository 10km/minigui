.\" This manpage is Copyright (C) 2000 Wei Yongming
.\"                               2000 BluePoint Software
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since MiniGUI is constantly changing, this
.\" manual page may be incorrect or out-of-date. The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.TH "ClipRectHeap" "3" "August 2000" "MiniGUI"

.SH "NAME"
ClipRectHeap \- Management of private clip rect heap.

.SH "SYNOPSIS"
.B #include <minigui/gdi.h>
.PP
.BI "BOOL GUIAPI InitFreeClipRectList" "(PFREECLIPRECTLIST pList, size_t size);"
.br
.BI "PCLIPRECT GUIAPI ClipRectAlloc" "(PFREECLIPRECTLIST pList);"
.br
.BI "void GUIAPI FreeClipRect" "(PFREECLIPRECTLIST pList, CLIPRECT* pRect);"
.br
.BI "void GUIAPI EmptyFreeClipRectList" "(PFREECLIPRECTLIST pList);"
.br
.BI "void GUIAPI DestroyFreeClipRectList" "(PFREECLIPRECTLIST pList);"

.SH "DESCRIPTION"
.PP MiniGUI uses internal rect heap to allocate and free clip rect for region efficiently. When define a region, which was composed with many clip rects, you must specify a free clip rect list as the heap of the region to allocate and free clip rects. The functions describing here can help you initialize a clip rect heap, and allocate and free clip rect from it.
.PP
\fBInitFreeClipRectList\fP function allocates memory from system heap for free clip rect list, and initializes the list specified by \fBpList\fP. The number of clip rects in the list is \fBsize\fP.
.PP
Clip rect and free clip rect list in MiniGUI are defined as follows:
.sp
.nf
typedef struct tagCLIPRECT
{
.in +8
RECT rc;
BOOL fromheap;
struct tagCLIPRECT* next;
.in -8
}CLIPRECT;
typedef CLIPRECT* PCLIPRECT;

typedef struct tagFREECLIPRECTLIST
{
.in +8
pthread_mutex_t lock;
PCLIPRECT       head;
PCLIPRECT       tail;
int             size;
PCLIPRECT       heap;
int             free;
.in -8
}FREECLIPRECTLIST;
typedef FREECLIPRECTLIST* PFREECLIPRECTLIST;
.fi
.PP
\fBClipRectAlloc\fP function allocates a clip rect from the initialized list \fBpList\fP. If there is no left item in the heap, it will try to allocate the clip rect from system heap. This function returns a pointer to the allocated clip rect, \fBNULL\fP when an error occurred.
.PP
\fBFreeClipRect\fP function frees the clip rect \fBpRect\fP allocated by \fBClipRectAlloc\fP.
.PP
\fBEmptyFreeClipRectList\fP function resets the heap used by \fBpList\fP. If there is any clip rect allocated from the system heap, this function will free it using \fBfree\fP.
.PP
\fBDestroyFreeClipRectList\fP function destroys the free clip list \fBpList\fP by empting the list and freeing the heap.
.SH "NOTE"
.PP
Although you can use these function to allocate and free clip rect, you should avoid using this function directly. Functions of region will use these function to manipulate the clip rect.

.SH "SEE ALSO"
.BR InitClipRgn (3)

.SH "AUTHOR"
.PP
This manual page was edited by WEI Yongming <ymwei@minigui.org>.
If you have any problems, comments or found some bugs, please send messages to me.
