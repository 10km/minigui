.\" This manpage is Copyright (C) 2000 Wei Yongming
.\"                               2000 BluePoint Software
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since MiniGUI is constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.TH "DTI" "3" "July 2000" "MiniGUI"
.SH "NAME"
DTI \- the desktop interfaces of MiniGUI
.SH "SYNOPSIS"
.B #include <minigui/minigui.h>
.PP
.BI "void GUIAPI CustomizeDesktopMenu" "(HMENU hDesktopMenu, int iPos);"
.br
.BI "int GUIAPI CustomDesktopCommand" "(int id);"
.br
.BI "void GUIAPI OpenAboutDialog" "(void);"
.br
.SH "DESCRIPTION"
.PP
\fBCustomizeDesktopMenu\fP function will be called automatically by MiniGUI when you click right button on MiniGUI's desktop.
.PP
\fBCustomDesktopCommand\fP function will be called automatically by MiniGUI when you choose command on MiniGUI's desktop menu.
.PP
\fBOpenAboutDialog\fP function tells desktop to open an \fBAbout MiniGUI...\fP dialog.
.SH "NOTES"
You should implemented \fBCustomizeDesktopMenu, CustumDesktopCommand\fP functions by yourself.
However, there is a \fBdti.c\fP file, which defines above functions as default actions. You can use these functions in your own \fBdti.c\fP by including this file in your \fBdti.c\fP file, as follows:
.PP
.nf
#include <minigui/dti.c>
.fi
.PP
Or you can use macros to disable the default functions and define your own instances:
.PP
.nf
// Use macro to disable system defined 
// CustomizeDesktopMenu and CustomDesktopCommand functions

#define DONT_USE_SYS_CUSTOMIZEDESKTOPMENU
#include <minigui/dti.c>

// Define your own instance here.
void CustomizeDesktopMenu (HMENU hmnu, int iPos)
{
    ...
}

int CustomDesktopCommand (int id)
{
    ...
    return 0;
}
.fi

.SH "SAMPLE"
This sample uses \fBCustomizeDesktopMenu\fP function to append a menu item at the desktop menu, and then uses \fBCustomDesktopCommand\fP to response the select of the appended menu item and open a Virtual Console window:
.PP
.nf
#define DONT_USE_SYS_CUSTOMIZEDESKTOPMENU
#include <minigui/dti.c>

#define IDC_DTI_ABOUT   (IDM_DTI_FIRST + 1)
#define IDC_DTI_NEWVC   (IDM_DTI_FIRST + 2)

void CustomizeDesktopMenu (HMENU hmnu, int iPos)
{
    MENUITEMINFO mii;

    memset (&mii, 0, sizeof(MENUITEMINFO));
    mii.type        = MFT_STRING;
    mii.id          = IDC_DTI_ABOUT;
    mii.typedata    = (DWORD)"About MiniGUI...";
    mii.hsubmenu    = 0;
    InsertMenuItem (hmnu, iPos, TRUE, &mii);
	
    mii.type        = MFT_STRING;
    mii.id          = IDC_DTI_NEWVC;
    mii.typedata    = (DWORD)"New Virtual Console";
    mii.hsubmenu    = 0;
    InsertMenuItem (hmnu, iPos + 1, TRUE, &mii);
}

int CustomDesktopCommand (int id)
{
    if (id == IDC_DTI_ABOUT)
        OpenAboutDialog ();
    else if (id == IDC_DTI_NEWVC)
        NewVirtualConsole (NULL);

    return 0;
}
.fi

.SH "SEE ALSO"
.BR miniguiInit "(3), " miniguiMain (3)

.SH "AUTHOR"
.PP
This manual page was edited by WEI Yongming <ymwei@minigui.org>. 
If you have any problems, comments or found some bugs, please send messages to me.

