.\" This manpage is Copyright (C) 2000 Wei Yongming
.\"                               2000 BluePoint Software
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since MiniGUI is constantly changing, this
.\" manual page may be incorrect or out-of-date. The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.TH "DialogBox" "3" "August 2000" "MiniGUI"

.SH "NAME"
DialogBox \- DialogBox Support Functions.

.SH "SYNOPSIS"
.B #include <minigui/window.h>
.br

.PP
.BI "HWND GUIAPI CreateMainWindowIndirect" "(PDLGTEMPLATE pDlgTemplate, HWND hOwner, WNDPROC WndProc);"
.br
.BI "BOOL GUIAPI DestroyMainWindowIndirect" "(HWND hMainWin);"
.br
.BI "int  GUIAPI DialogBoxIndirectParam" "(PDLGTEMPLATE pDlgTemplate, HWND hOwner, WNDPROC DlgProc, LPARAM lParam);"
.br
.BI "BOOL GUIAPI EndDialog" "(HWND hDlg, int endCode);"
.br
.BI "void GUIAPI DestroyAllControls" "(HWND hDlg);"
.br
.BI "int  GUIAPI DefaultDialogProc" "(HWND hWnd, int message, WPARAM wParam, LPARAM lParam);"
.br
.BI "HWND GUIAPI GetDlgDefPushButton" "(HWND hWnd);"
.br
.BI "int  GUIAPI GetDlgCtrlID" "(HWND hwndCtl);"
.br
.BI "HWND GUIAPI GetDlgItem" "(HWND hDlg, int nIDDlgItem);"
.br
.BI "UINT GUIAPI GetDlgItemInt" "(HWND hDlg, int nIDDlgItem, BOOL *lpTranslated, BOOL bSigned);"
.br
.BI "int  GUIAPI GetDlgItemText" "(HWND hDlg, int nIDDlgItem, char* lpString, int nMaxCount);"
.br
.BI "char* GUIAPI GetDlgItemText2" "(HWND hDlg, int id, int* lenPtr);"
.br
.BI "HWND GUIAPI GetNextDlgGroupItem" "(HWND hDlg, HWND hCtl, BOOL bPrevious);"
.br
.BI "HWND GUIAPI GetNextDlgTabItem" "(HWND hDlg, HWND hCtl, BOOL bPrevious);"
.br
.BI "int  GUIAPI SendDlgItemMessage" "( HWND hDlg, int nIDDlgItem, int message, WPARAM wParam, LPARAM lParam);"
.br
.BI "BOOL GUIAPI SetDlgItemInt" "(HWND hDlg, int nIDDlgItem, UINT uValue, BOOL bSigned);"
.br
.BI " BOOL GUIAPI SetDlgItemText" "(HWND hDlg, int nIDDlgItem, const char* lpString);"
.br
.BI "void GUIAPI CheckDlgButton" "(HWND hDlg, int nIDDlgItem, int nCheck);"
.br
.BI "void GUIAPI CheckRadioButton" "(HWND hDlg, int idFirstButton, int idLastButton, int idCheckButton);"
.br
.BI "int  GUIAPI IsDlgButtonChecked" "(HWND hDlg, int idButton);"
.SH "DESCRIPTION"
.PP
\fBCreateMainWindowIndirect\fP function creates a dialog window specified by \fBpDlgTemplate\fP.
.PP
\fBDestroyMainWindowIndirect\fP function destroys the window created by \fBCreateMainWindowIndirect\fP.
.PP
\fBDialogBoxIndirectParam\fP function creates a modal dialog box from a dialog box template in memory. Before displaying the dialog box, the function passes an application-defined value to the dialog box procedure as the \fBlParam\fP parameter of the \fBWM_INITDIALOG\fP message. An application can use this value to initialize dialog box controls. 
.PP
\fBEndDialog\fP function destroys a modal dialog box, causing the system to end any processing for the dialog box. 
.PP
\fBDestroyAllControls\fP function destroys all the controls in the dialog box.
.PP
\fBDefaultDialogProc\fP function is the default dialog box message handler.
.PP
\fBGetDlgDefPushButton\fP function gets the default push button in the window specified by hWnd.
.PP
\fBGetDlgCtrlID\fP function returns the identifier of the specified control.
.PP
\fBGetDlgItem\fP function retrieves the handle of a control in the specified dialog box.
.PP
\fBGetDlgItemInt\fP function translates the text of a specified control in a dialog box into an integer value. 
.PP
\fBGetDlgItemText\fP function retrieves the title or text associated with a control in a dialog box. 
.PP
\fBGetDlgItemText2\fP function is similiar to \fBGetDlgItemText\fP function.But it allocates memory for the text.
.PP
\fBGetNextDlgGroupItem\fP function retrieves the handle of the first control in a group of controls that precedes (or follows) the specified control in a dialog box. 
.PP
\fBGetNextDlgTabItem\fP function retrieves the handle of the first control that has the \fBWS_TABSTOP\fP style that precedes (or follows) the specified control. 
.PP
\fBSendDlgItemMessage\fP function sends a message to the specified control in a dialog box. 
.PP
\fBSetDlgItemInt\fP function sets the text of a control in a dialog box to the string representation of a specified integer value. 
.PP
\fBSetDlgItemText\fP function sets the title or text of a control in a dialog box.
.PP
\fBCheckDlgButton\fP function changes the check status of a button control.
.PP
\fBCheckRadioButton\fP function adds a check mark to (checks) a specified radio button in a group and removes a check mark from (clears) all other radio buttons in the group.
.PP
\fBIsDlgButtonChecked\fP function determines whether a button control has a check mark next to it or whether a three-state button control is grayed, checked, or neither.
.SH "RETURN VALUE"
.PP

.SH "NOTE"
.PP

.SH "SEE ALSO"

.SH "AUTHOR"
.PP
This manual page was edited by Song Lixin <zjujoe@minigui.org>.
If you have any problems, comments or found some bugs, please send messages to me.
